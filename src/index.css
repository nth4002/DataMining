/* src/index.css */
@import "tailwindcss";
/* 2. Base HTML and Root Styling (Minimal) */
html,
body,
#root { /* Assuming your app mounts to #root */
  height: 100%; /* Ensure full height for layouts like min-h-screen */
  /* font-family can be set in tailwind.config.js for better consistency */
}

body {
  /* Tailwind's preflight handles margin reset.
     Default text color and background color are best set on a wrapper in App.jsx
     or via Tailwind's dark mode features if you intend to use them.
     If you want a default font for the whole app, define it in tailwind.config.js.
     For now, let's assume bg-gray-100 in App.jsx is your main page background.
  */
  -webkit-font-smoothing: antialiased; /* Good for font rendering */
  -moz-osx-font-smoothing: grayscale;  /* Good for font rendering */
}

#root {
  display: flex; /* If using the flex column layout for App.jsx directly in #root */
  flex-direction: column;
}

/* 3. Custom Global Styles or Overrides (Use Sparingly) */

/* Example: If you want all links to have a specific non-Tailwind style globally */
/*
a {
  color: #your-custom-link-color;
  text-decoration: underline;
}
a:hover {
  color: #your-custom-link-hover-color;
}
*/

/* Example: Custom component class that you can't easily build with utilities.
   You would apply this class in your JSX like className="my-custom-button"
*/
/*
.my-custom-button {
  @apply px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700;
  font-family: 'Your Special Button Font', sans-serif; // Example of something not easily done with just utilities
}
*/

/*
  VITE DEFAULT STYLES TO CONSIDER REMOVING OR REPLACING WITH TAILWIND UTILITIES:

  Most of the :root color scheme, color, background-color can be removed if you're
  primarily using Tailwind for theming (e.g., setting bg-gray-100 on your main app div).
  Tailwind also has dark mode variants (dark:bg-whatever).

  The default styles for `a`, `h1`, `button` are often better handled by applying
  Tailwind utility classes directly to those elements in your JSX for more control,
  or by customizing Tailwind's base styles for these elements if you want a
  consistent unstyled look that you then build upon.

  The `body { display: flex; place-items: center; min-width: 320px; min-height: 100vh; }`
  was likely for centering the default Vite logo page. With your new App.jsx layout,
  this specific body styling is likely no longer needed or might conflict.
  `min-h-screen` on your main app wrapper in App.jsx is the preferred Tailwind way.
*/